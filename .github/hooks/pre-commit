#!/bin/sh
#
# Pre-commit hook for rax-ftp-client
# This hook runs cargo fmt and cargo clippy before allowing commits
# Place this file at: .git/hooks/pre-commit and make it executable
#

set -e  # Exit on any error

echo " Running pre-commit checks for rax-ftp-client..."

# Check if we're in a Rust project
if [ ! -f "Cargo.toml" ]; then
    echo " Cargo.toml not found. Are you in the rax-ftp-client directory?"
    exit 1
fi

# Check for staged Rust files
RUST_FILES=$(git diff --cached --name-only --diff-filter=ACM | grep '\.rs$' || true)
if [ -z "$RUST_FILES" ]; then
    echo "  No Rust files staged for commit. Skipping Rust checks."
    exit 0
fi

echo " Found staged Rust files:"
echo "$RUST_FILES" | sed 's/^/  - /'
echo

# 1. Check code formatting
echo " Checking code formatting with cargo fmt..."
if ! cargo fmt --all -- --check; then
    echo
    echo " Code formatting check FAILED!"
    echo " Run 'cargo fmt --all' to fix formatting issues."
    echo "   Then stage your changes and commit again."
    exit 1
fi
echo " Code formatting check passed!"
echo

# 2. Run clippy with warnings as errors (same as CI)
echo " Running clippy analysis..."
export RUSTFLAGS="-Dwarnings"
if ! cargo clippy --all-targets --all-features -- -D warnings; then
    echo
    echo " Clippy found warnings or errors!"
    echo " Fix all clippy warnings before committing."
    echo "   Run 'cargo clippy --all-targets --all-features' to see details."
    exit 1
fi
echo " Clippy analysis passed!"
echo

# 3. Optional: Quick compilation check
echo " Running quick compilation check..."
if ! cargo check --all-targets --all-features; then
    echo
    echo " Compilation check FAILED!"
    echo " Fix compilation errors before committing."
    exit 1
fi
echo " Compilation check passed!"
echo

echo " All pre-commit checks PASSED! Proceeding with commit..."
echo